/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import conexion.ConectionDB;
import controlador.Ctrl_Moto;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import modelo.Modelo_Moto;

/**
 *
 * @author Edward
 */
public class InterMotocicleta extends javax.swing.JInternalFrame {

    /**
     * Creates new form InterMotocicleta
     */
    private int obtenerIdCategoria = 0;

    public InterMotocicleta() {
        initComponents();
        this.setSize(new Dimension(400, 350));
        this.setTitle("Nuevo Producto");
        cargarCBOCategorias();
        this.setClosable(false);
        this.setIconifiable(false);
                           this.setDefaultCloseOperation(JInternalFrame.DO_NOTHING_ON_CLOSE); //no permite el movimiento del internal
           ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null); // desactiva la abrra de titulo
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        txtCilindraje = new javax.swing.JTextField();
        cboIva = new javax.swing.JComboBox<>();
        cboCategoria = new javax.swing.JComboBox<>();
        btnAñadir = new javax.swing.JButton();
        lblFondo = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nueva Motocicleta");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cantidad:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Precio:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Descripcion:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("IVA:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 350, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Categoria:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 400, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Cilindraje:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 460, -1, -1));

        txtNombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 240, 30));

        txtCantidad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });
        getContentPane().add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, 240, 30));

        txtPrecio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });
        getContentPane().add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, 240, 30));

        txtDescripcion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, 240, 30));

        txtCilindraje.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtCilindraje, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 460, 240, 30));

        cboIva.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cboIva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione IVA:", "Sin IVA", "12%", "16%" }));
        getContentPane().add(cboIva, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, 240, 30));

        cboCategoria.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cboCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Categoria:" }));
        cboCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCategoriaActionPerformed(evt);
            }
        });
        getContentPane().add(cboCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 400, 240, 30));

        btnAñadir.setBackground(new java.awt.Color(102, 102, 102));
        btnAñadir.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAñadir.setText("Añadir");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });
        getContentPane().add(btnAñadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 540, 170, 40));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FONDO5.jpg"))); // NOI18N
        getContentPane().add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 830, 636));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        Modelo_Moto moto = new Modelo_Moto();
        Ctrl_Moto ctrl_Moto = new Ctrl_Moto();
        String iva = "";
        String categoria = "";
        iva = cboIva.getSelectedItem().toString().trim();
        categoria = cboCategoria.getSelectedItem().toString().trim();

        if (txtNombre.getText().equals("") || txtCantidad.getText().equals("") || txtPrecio.getText().equals("") || txtDescripcion.getText().equals("") || txtCilindraje.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Rellene todos los campos");
        } else {
            if (!ctrl_Moto.existeMoto(txtNombre.getText().trim())) {

                if (iva.equalsIgnoreCase("Seleccione IVA:")) {
                    JOptionPane.showMessageDialog(null, "Seleccione IVA");
                } else {
                    if (categoria.equalsIgnoreCase("Seleccione Categoria:")) {
                        JOptionPane.showMessageDialog(null, "Seleccione Una Categoria");
                    } else {
                        try {
                            moto.setNombre(txtNombre.getText().trim());
                            moto.setCilindraje(txtCilindraje.getText().trim());
                            moto.setCantidad(Integer.parseInt(txtCantidad.getText().trim()));
                            String precioTxt = txtPrecio.getText().trim();
                            Double precioD = 0.0;
                            boolean aux = false;
                            
                            //Asignar Precio
                            for (int i = 0; i < precioTxt.length(); i++) {
                                if (precioTxt.charAt(i) == ',') {
                                    String precioNuevo = precioTxt.replace(",", ".");
                                    precioD = Double.parseDouble(precioNuevo);
                                    aux = true;
                                }
                            }

                            if (aux == true) {
                                moto.setPrecio(precioD);
                            } else {
                                precioD = Double.parseDouble(precioTxt);
                                moto.setPrecio(precioD);
                            }
                            //descripcion
                            moto.setDescripcion(txtDescripcion.getText().trim());
                            //Porcentaje IVA
                            if (iva.equalsIgnoreCase("Sin IVA")) {
                                moto.setPorcentajeIva(0);
                            } else if (iva.equalsIgnoreCase("12%")) {
                                moto.setPorcentajeIva(12);
                            } else if (iva.equalsIgnoreCase("16%")) {
                                moto.setPorcentajeIva(16);
                            }
                            
                            //cargar metodoIdCategoria
                            this.idCategoria();
                            moto.setIdCategoria(obtenerIdCategoria);
                            //estado
                            
                            if(ctrl_Moto.guardarMoto(moto)){
                                JOptionPane.showMessageDialog(null, "Se añadio correctamente");
                                
                                this.limpiar();
                            }else{
                                JOptionPane.showMessageDialog(null, "No se pudo añadir");
                            }
                        } catch (HeadlessException | NumberFormatException e) {
                            System.out.println("Error en: "+e);
                        }

                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "La motocicleta ya se encuentra en la base de datos");
            }
        }
    }//GEN-LAST:event_btnAñadirActionPerformed

    private void cboCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboCategoriaActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
char c = evt.getKeyChar();
        // Verifica si el carácter no es un número
        if (!Character.isDigit(c)) {
            // Si no es un número, consume el evento para prevenir la entrada
            evt.consume();
        }              // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
char c = evt.getKeyChar();
        // Verifica si el carácter no es un número
        if (!Character.isDigit(c)) {
            // Si no es un número, consume el evento para prevenir la entrada
            evt.consume();
        }              // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioKeyTyped

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadir;
    private javax.swing.JComboBox<String> cboCategoria;
    private javax.swing.JComboBox<String> cboIva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCilindraje;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

    //Metodo para llenar el comboBox
    private void cargarCBOCategorias() {
        Connection cx = ConectionDB.conectar();
        String sql = "select *from categoria";
        Statement st;

        try {
            st = cx.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                cboCategoria.addItem(rs.getString("descripcion"));
            }
            cx.close();
        } catch (SQLException e) {
            System.out.println("Error al cargar categorias al comboBox " + e);
        }
    }

    //Metodo para asignar idCategoria
    private int idCategoria() {
        String sql = "select *from categoria where descripcion='" + cboCategoria.getSelectedItem() + "';";
        Statement st;
        try {
            Connection cx = ConectionDB.conectar();
            st = cx.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
            obtenerIdCategoria=rs.getInt("idCategoria");
            }

        } catch (SQLException e) {
            System.out.println("Error al obtener categoria");
        }
        return obtenerIdCategoria;
    }
    
    private void limpiar(){
        txtCantidad.setText(null);
        txtCilindraje.setText(null);
        txtPrecio.setText(null);
        txtNombre.setText(null);
        txtDescripcion.setText(null);
        cboCategoria.setSelectedIndex(0);
        cboIva.setSelectedIndex(0);
        
    }
}
