/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import conexion.ConectionDB;
import controlador.Ctrl_Cliente;
import controlador.Ctrl_RegistrarVenta;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelo.Modelo_CabeceraVenta;
import modelo.Modelo_Cliente;
import static vista.InterGestionarUsuario.tablaUsuarios;

/**
 *
 * @author Edward
 */
public class InterGestionarVenta extends javax.swing.JInternalFrame {

    /**
     * Creates new form InterGestionarCategoria
     */
    private int idCliente = 0;
    private int idVenta;
    private String cliente = "";
    String auxImagen = "";

    public InterGestionarVenta() {
        initComponents();
        this.setSize(new Dimension(940, 500));
        this.setTitle("GESTIONAR_VENTAS");
        this.cargarTablaVentas();
        this.setDefaultCloseOperation(JInternalFrame.DO_NOTHING_ON_CLOSE); //no permite el movimiento del internal
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null); // desactiva la abrra de titulo
    }

    //Para poner el logo de suzuki a escala en el bar menu
    private void fondoEtiqueta() {
        ImageIcon logo = new ImageIcon("src/img/GRIS.jpg");
        Icon icon = new ImageIcon(logo.getImage().getScaledInstance(940, 500, WIDTH));
        lblFondo.setIcon(icon);
        lblFondo.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        scrollVentas = new javax.swing.JScrollPane();
        tablaVentas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        cboBusqueda = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lblFondo = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar Ventas");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(515, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollVentas.setViewportView(tablaVentas);

        jPanel1.add(scrollVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 380));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 990, 380));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Buscar por:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 160, 20));

        cboBusqueda.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion:", "Cliente", "Fecha de Venta" }));
        cboBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboBusquedaActionPerformed(evt);
            }
        });
        jPanel2.add(cboBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 200, 30));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Ingrese el dato a  buscar:");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 190, 20));
        jPanel2.add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, 220, 30));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, 100, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 810, 90));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FONDO.jpg"))); // NOI18N
        getContentPane().add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 760));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        buscarVenta();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cboBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboBusquedaActionPerformed
        if (cboBusqueda.getSelectedItem().equals("Seleccione una opcion:")) {
            JOptionPane.showMessageDialog(null, "Seleccione una opcion de busqueda");
        } else if (cboBusqueda.getSelectedItem().equals("Cliente")) {
            txtBusqueda.setText(null);
        } else if (cboBusqueda.getSelectedItem().equals("Fecha de Venta")) {
            txtBusqueda.setText(null);
        }       // TODO add your handling code here:
    }//GEN-LAST:event_cboBusquedaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboBusqueda;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblFondo;
    public static javax.swing.JScrollPane scrollVentas;
    public static javax.swing.JTable tablaVentas;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables

    //Metodo Limpiar 
    //Metodo para motrar todas los clientes registrados
    public void cargarTablaVentas() {
        Connection cx = conexion.ConectionDB.conectar();
        DefaultTableModel dfT = new DefaultTableModel();
        String sql = "select cv.idVenta as id, concat(c.nombre,' ',c.apellido) as cliente, "
                + "cv.cantidadPagar as total, cv.fecha as fecha "
                + "from venta as cv, cliente as c where cv.idCliente=c.idCliente;";
        Statement st;

        try {
            st = cx.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterGestionarVenta.tablaVentas = new JTable(dfT);
            InterGestionarVenta.scrollVentas.setViewportView(InterGestionarVenta.tablaVentas);

            dfT.addColumn("ID");
            dfT.addColumn("Cliente");
            dfT.addColumn("Total Pagar");
            dfT.addColumn("Fecha Venta");

            while (rs.next()) {

                Object fila[] = new Object[4];

                for (int i = 0; i < 4; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                dfT.addRow(fila);
            }
            cx.close();

        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla ventas: " + e);
        }

    }

    private void buscarVenta() {
        int aux;
        String tipoBusqueda = "" + cboBusqueda.getSelectedItem();
        if (!tipoBusqueda.equals("Seleccione una opcion:")) {
            if (cboBusqueda.getSelectedItem().equals("Cliente")) {
                aux = 1;
                String searchText = txtBusqueda.getText().toLowerCase();
                DefaultTableModel model = (DefaultTableModel) tablaVentas.getModel();
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
                tablaVentas.setRowSorter(sorter);
                if (searchText.trim().length() == 0) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + searchText, aux)); // este sirve para buscar mediante la columna 1 o sea nombre
                }
            } else if (cboBusqueda.getSelectedItem().equals("Fecha de Venta")) {
                aux = 3;
                String searchText = txtBusqueda.getText().toLowerCase();
                DefaultTableModel model = (DefaultTableModel) tablaVentas.getModel();
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
                tablaVentas.setRowSorter(sorter);
                if (searchText.trim().length() == 0) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + searchText, aux)); // este sirve para buscar mediante la columna 1 o sea nombre
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una opcion de busqueda");
        }
    }

}
